.TH DB2XML 3 "$Date$"
.SH NAME
db2xml \- convert a database view to XML
.SH SYNOPSIS
.nf
#include "dbxml.h"

int \fBdb2xml\fP(Dbptr \fIdb\fP, char *\fIrootnode\fP, char *\fIrownode\fP,
                 Tbl *\fIfields\fP, Tbl *\fIexpressions\fP, void **\fIxml\fP,
                 int \fIflags\fP)
.fi
.SH DESCRIPTION
\fBdb2xml\fP returns an XML (eXtensible Markup Language) representation of a
database view, returning 0 for success and negative values on error.
The view is entirely contained in a single XML element named after the
view name (table name for a base table), unless an alternative name is
specified with the \fIrootnode\fP argument (set \fIrootnode\fP to null for default
behavior).

Each row of the view is entered as an element named \fIrow\fP unless an
alternative is specified with the \fIrownode\fP argument. If both \fIfields\fP
and \fIexpressions\fP are zero, all \fIfields\fP present in the database view
are used. Each appears as its own element, named the same as the fully-qualified (i.e. "table.field") field name .
If \fIfields\fP is nonzero and \fIexpressions\fP is zero, the \fIfields\fP specified
are used both as element names and as \fIexpressions\fP (usually simple \fIfields\fP)
from the database. If a table of \fIexpressions\fP is supplied, each expression is
evaluated against each row and the result placed in the corresponding field
name from the \fIfields\fP table.

By default (i.e. with \fIflags\fP set to 0) the \fIxml\fP result is
returned as a string in the \fIxml\fP pointer.  This string
is freshly allocated on each call. Previous contents of the pointer are
ignored. Freeing the returned string is the responsibility of the user. If the
\fIflags\fP argument is set to DBXML_BNS, the returned argument
\fIxml\fP is the address of a pointer to a Buffered Network Stream
object, which allows the XML result to be read out in pieces. For
further detail see bns(3). Once again, freeing the returned Bns structure is 
the responsibility of the user.

If the \fIflags\fP argument is set to DBXML_PRIMARY, only the primary 
keys of the table(s) in the input view are reported. This flag is ignored
if any fields or expressions are explicitly specified. 

.SH EXAMPLE
.ft CW
.in 2c
.nf

.ne 5
yukon% cat try.c
#include <stdlib.h>
#include "db.h"
#include "stock.h"
#include "dbxml.h"

.ne 6
main() {
        Dbptr   db;
        char    *dbname = "/opt/antelope/data/db/demo/demo";
        char    expr[STRSZ];
        char    *xml;
        int     orid;

.ne 7
        dbopen( dbname, "r", &db );

        db = dblookup( db, 0, "origin", 0, 0 );
        db.record = 0;
        dbgetv( db, 0, "orid", &orid, 0 );
        sprintf( expr, "orid == %d", orid );
        db = dbsubset( db, expr, 0 );

.ne 7
        db2xml( db, 0, 0, 0, 0, (void **) &xml, 0 );

        printf( "%s\\n", xml );

        exit( 0 );
}
yukon%

.ne 31
yukon% try
<View45>
   <row>
      <origin.lat>40.0740</origin.lat>
      <origin.lon>69.1640</origin.lon>
      <origin.depth>155.1660</origin.depth>
      <origin.time>704371900.66886</origin.time>
      <origin.orid>1</origin.orid>
      <origin.evid>-1</origin.evid>
      <origin.jdate>1992118</origin.jdate>
      <origin.nass>7</origin.nass>
      <origin.ndef>7</origin.ndef>
      <origin.ndp>-1</origin.ndp>
      <origin.grn>715</origin.grn>
      <origin.srn>48</origin.srn>
      <origin.etype>-</origin.etype>
      <origin.review></origin.review>
      <origin.depdp>-999.0000</origin.depdp>
      <origin.dtype>f</origin.dtype>
      <origin.mb>2.62</origin.mb>
      <origin.mbid>1</origin.mbid>
      <origin.ms>-999.00</origin.ms>
      <origin.msid>-1</origin.msid>
      <origin.ml>-999.00</origin.ml>
      <origin.mlid>-1</origin.mlid>
      <origin.algorithm>locsat:kyrghyz</origin.algorithm>
      <origin.auth>JSPC</origin.auth>
      <origin.commid>-1</origin.commid>
      <origin.lddate>790466871.00000</origin.lddate>
   </row>
</View45>

yukon%

.fi
.in
.ft R
.SH RETURN VALUES
\fBdb2xml\fP returns 0 upon success, -1 upon error. Any errors encountered
are registered with the elog(3) facility.
.SH LIBRARY
-ldbxml $(DBLIBS)
.SH "SEE ALSO"
.nf
db2xml(1), dbselect(3)
.fi
.SH "BUGS AND CAVEATS"
This version has no support for attributes.

The pretty-print indent width is fixed, and newlines are added by default.
At some point it may be necessary to add these later.

The \fIxml\fP pointer is a void pointer to support multiple return
types.  It may be desirable in the future to return something more
complex than a pretty-printed string, such as a libxml2 DOM (Document
Object Model) tree.  If necessary, the returned string can always be
parsed into a representation of choice.

.SH AUTHOR
.nf
Kent Lindquist
Lindquist Consulting
.fi
.\" $Id$

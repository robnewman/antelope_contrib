.TH DB2EIDS 1 "$Date$"
.SH NAME
db2eids \- Create EIDS files for earthquakes in a database
.SH SYNOPSIS
.nf
db2eids [-p pfname] [-1] [-vV] dbname
.fi
.SH DESCRIPTION
The \fBdb2eids\fP program creates representations of earthquakes in 
the US Geological Survey's Earthquake Information Distribution System 
(EIDS) XML (eXtensible Markup Language) format, archiving them in the
\fIeids\fP extension table of a css3.0 database. The database 
\fIdbname\fP named on the command line is monitored continuously for 
new or changed hypocenters matching the conditions specified in the 
parameter file. Every time a new hypocenter of interest is detected 
(as determined by the list of commands in the \fIdbprocess_commands\fP 
table of the parameter file), an XML file is created and saved in a 
file according to the \fIeids_filename_template\fP parameter.

For every row of interest in the input database, \fBdb2eids\fP first 
generates a generic XML representation which it stores internally. 
This generic XML object has XML elements and values specified by the 
\fIgeneric_xml_elements\fP parameter-file array (see below). 
This generic XML object is then transformed via the XSLT 
(eXtensible Stylesheet Language for Transformations) stylesheet specified 
in the \fIxslt_stylesheet\fP parameter to create the final XML output. 

After the final EIDS XML file is saved to disk and recorded in the 
database, an optional Unix command specified by the \fIpostprocess_command\fP
parameter may be run on the file to deliver it to an input mechanism for 
QWIDS (QuakeWatch Information Distribution System) or other relevant 
downstream target. 

.SH OPTIONS
.IP -1
With this option, db2eids will run once and then exit, instead of 
continuously monitoring the database.
.IP "-p pfname"
Specify a parameter-file other than the default db2eids.pf.
.IP -v 
Be verbose about conversions
.IP -V
Be very verbose, emitting the generic XML file created as well as the 
resulting EIDS XML file. This option can be useful when modifying the 
XSLT stylesheet for EIDS XML creation. 
.SH FILES
\fBdb2eids\fP generates a generic XML object internally, which is then 
transformed by an XSLT stylesheet specified by the \fIxslt_stylesheet\fP 
parameter. This stylesheet can reference the following elements: 

.IP "A generic rootnode"
The name of the rootnode for the generic XML file will be given by the 
\fIgeneric_rootnode\fP parameter in the parameter file. 

.IP eqmessage_source
This element's value is determined by the setting of the 
\fIeqmessage_source\fP parameter. This element is contained in the 
generic rootnode. 

.IP sent
This element's value is determined by the time the XML object is created
(according to the system clock), formatted according to the 
\fIsent_time_format\fP parameter. This element is contained in the 
generic rootnode. 

.IP "One or more event rootnodes from db2xml"
The generic rootnode will contain one 
node named as specified in the \fIdb2xml_rootnode\fP parameter, 
encompassing all the information derived from the database view 
produced by the \fIdbprocess_commands\fP. 

.IP "One or more row nodes from db2xml"
Within the \fIdb2xml_rootnode\fP will be one row node for each 
database row in the view. The name of each row node element will be 
as specified in the \fIdb2xml_rownode\fP parameter of the parameter file. 

.IP "XML elements for database fields" 
Each \fIdb2xml_rownode\fP in the generic XML object will contain 
XML elements named after the keys of the \fIgeneric_xml_elements\fP
array in the parameter file. 

.SH ENVIRONMENT
.SH PARAMETER FILE

The parameter file should contain the following parameters: 

.IP db2xml_rootnode
This parameter  specifies the name of the root node generated by 
db2xml(3) when processing input database rows. The value of this parameter 
will be needed in the XSLT stylesheet to translate the generic XML output 
from db2xml(3) into the final output of \fBdb2eids\fP.

.IP db2xml_rownode
This parameter specifies the name of each node for a given
row of the input database, as generated by 
db2xml(3) when processing input database rows. The value of this parameter
will be needed in the XSLT stylesheet to translate the generic XML output 
from db2xml(3) into the final output of \fBdb2eids\fP.

.IP dbprocess_commands
This table of commands is given to the dbprocess(3) function to determine
which database rows need to be converted to EIDS format on any given 
check of the database. 

.IP eids_filename_template 
This parameter controls the names of eids XML files generated in 
the database. This parameter should contain a relative or an absolute 
pathname (if the pathname is relative, files will be created in a path
relative to the database descriptor). A \fI%{orid}\fP appearing in this string 
will be replaced by the \fIorid\fP for the earthquake being processed. 
Other percent-escape characters will be interpreted as time values, 
as documented in the epoch2str(3) man page, according to the time 
at which the XML was generated. 

.IP eqmessage_source
This parameter specifies the name of the source institution, to be 
referred to in the \fIEQMessage\fP output as the \fISource\fP element. 

.IP generic_rootnode
This parameter specifies the name of the root node for the generic XML 
which is created by db2xml(3), to be given to the XSLT stylesheet. 

.IP generic_xml_elements
This parameter-file array lists the names of XML elements to create in the 
output XML file, along with the Datascope field-names or expressions 
used to create them from the input database pointer. If the expression 
is blank, the array key is assumed to be a Datascope field name and 
is used both as the XML element name in the generic XML document and 
as the field name to be extracted from the input database. 

.IP postprocess_command
If this parameter is not empty, the value is interpreted as a command which 
is passed to the Unix system after each XML file is generated. The string
EIDSFILE will be replaced with the filename of the EIDS XML file. For example,
to mail each XML file to an address, one would use the following value for
\fIpostprocess_command\fP:
.nf

mailx -s EIDS recipient@someplace.com < EIDSFILE

.fi
Similarly, all resulting EIDS XML files can be copied to a directory of 
choice with the following \fIpostprocess_command\fP:
.nf

cp EIDSFILE /tmp

.fi

.IP query_interval_sec
This parameter specifies the number of seconds between database-scans 
to look for new hypocenters for which EIDS files need to be generated. 

.IP sent_time_format
This parameter specifies an epoch2str(3) escape code sequence 
defining the format for the time-string used in the \fIsent\fP 
element of the generic XML.
 
.IP xslt_stylesheet
This parameter gives the name of an XSLT (eXstensible Stylesheet 
Language for Transformations) stylesheet which can translate generic 
db2xml(3) output into EIDS-format XML. This is provided for long-term 
design flexibility and should not need to be modified by users under 
normal conditions. 

.SS Example parameter file:
.nf

query_interval_sec 10

xslt_stylesheet    &datafilename(xslt/db2eids.xsl)

eqmessage_source  &ref(site,originating_institution)
sent_time_format  %D %T %Z

eids_filename_template %Y/%j/EIDS_%{orid}_%T.xml

generic_rootnode contents
db2xml_rootnode  events
db2xml_rownode   hypocenter

dbprocess_commands &Tbl{
        dbopen origin
        dbjoin event 
        dbsubset orid == prefor
        dbnojoin eids
}

generic_xml_elements &Arr{
        orid
        evid
        lat
        lon
        depth
        time    strtime(origin.time)
}

postprocess_command
.fi
.SH EXAMPLE
.in 2c
.ft CW
.nf

% db2eids -1 -V testdb/testdb 

db2eids: Processing 1 hypocenters
db2eids: Processing orid 645

Converting generic XML:

<contents>
<eqmessage_source>Lindquist Consulting, Inc.</eqmessage_source>
<sent> 2/08/07 03:13:43.505 UTC</sent>
<events>
   <hypocenter>
      <evid>645</evid>
      <lat>41.608</lat>
      <time>5/17/1992  21:55:10.007</time>
      <mag>2.2</mag>
      <depth>0</depth>
      <magtype>Mb</magtype>
      <lon>72.293</lon>
      <orid>645</orid>
   </hypocenter>
</events>

</contents>


To resulting EIDS message:

<?xml version="1.0"?>
\<EQMessage>
<Source>Lindquist Consulting, Inc.</Source>
<Sent> 2/08/07 03:13:43.505 UTC</Sent>
<Event>
<DataSource>Lindquist Consulting, Inc.</DataSource>
<EventID>645</EventID>
<Version>645</Version>
<Origin>
<Latitude>41.608</Latitude>
<Longitude>72.293</Longitude>
<Depth>0</Depth>
<Time>5/17/1992  21:55:10.007</Time>
<Magnitude>
<TypeKey>Mb</TypeKey>
<Value>2.2</Value>
</Magnitude>
</Origin>
</Event>
</EQMessage>


db2eids: Added row 0 to 'testdb/testdb.eids'
db2eids: Wrote EIDS XML file 'testdb/2007/039/EIDS_645_03:13:43.505.xml'

.fi
.ft R
.in
.SH RETURN VALUES
.SH LIBRARY
.SH ATTRIBUTES
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
.fi
.SH "BUGS AND CAVEATS"
Currently, one XML file is generated for each earthquake. It should be
possible to make an option that puts all earthquakes from a given run into
the same XML file. 

It's not clear the default XSLT stylesheet creates appropriate EIDS 
input yet. This version of the stylesheet was created with no examples,
no available test framework for EIDS processing, and an outline document
of ANSS EQ XML Specification Version 0.25. 

The generic XML generation mechanism may be a bit simplistic to create 
the full-blown EIDS XML output with all required and optional fields 
filled. 

\fBdb2eids\fP does not yet create station-channel EIDS XML objects. 
.SH AUTHOR
.nf
Kent Lindquist 
Lindquist Consulting, Inc. 
.fi
.\" $Id$
